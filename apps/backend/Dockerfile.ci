### --- builder -----------------------------------------------------------
FROM node:18-alpine AS builder
WORKDIR /repo

# Install build dependencies for native modules
RUN apk add --no-cache python3 py3-setuptools make g++

# 1. full install + generate + build
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/backend/package.json ./apps/backend/
COPY apps/frontend/package.json ./apps/frontend/
RUN npm install -g pnpm@8.6.12
RUN pnpm install --frozen-lockfile

# build the backend + generate Prisma client
COPY apps/backend ./apps/backend
RUN pnpm --filter ./apps/backend exec prisma generate \
 && pnpm --filter ./apps/backend run build

### --- runtime (prod) -----------------------------------------------------
FROM node:18-alpine AS runtime
WORKDIR /app

# Install dependencies for health checks and networking
RUN apk add --no-cache openssl ca-certificates libstdc++ netcat-openbsd wget

# app code
COPY --from=builder /repo/apps/backend/dist   ./dist
COPY --from=builder /repo/apps/backend/prisma ./prisma
COPY --from=builder /repo/apps/backend/package.json ./

# copy the entire workspace node_modules (includes all symlinks)
COPY --from=builder /repo/node_modules ./node_modules

# create symlinks for all required dependencies
RUN ln -sf .pnpm/@prisma+client@5.1.1_prisma@5.1.1/node_modules/@prisma node_modules/@prisma && \
    ln -sf .pnpm/express@4.18.2/node_modules/express node_modules/express && \
    ln -sf .pnpm/cors@2.8.5/node_modules/cors node_modules/cors && \
    ln -sf .pnpm/bullmq@5.56.9/node_modules/bullmq node_modules/bullmq && \
    ln -sf .pnpm/pg@8.11.1/node_modules/pg node_modules/pg && \
    ln -sf .pnpm/pino@8.14.1/node_modules/pino node_modules/pino && \
    ln -sf .pnpm/pino-http@10.5.0/node_modules/pino-http node_modules/pino-http && \
    ln -sf .pnpm/prom-client@15.1.3/node_modules/prom-client node_modules/prom-client && \
    ln -sf .pnpm/redis@4.6.7/node_modules/redis node_modules/redis && \
    ln -sf .pnpm/wait-on@8.0.4/node_modules/wait-on node_modules/wait-on && \
    ln -sf .pnpm/zod@3.21.4/node_modules/zod node_modules/zod && \
    ln -sf .pnpm/argon2@0.31.0/node_modules/argon2 node_modules/argon2 && \
    ln -sf .pnpm/node-fetch@2.7.0/node_modules/node-fetch node_modules/node-fetch && \
    ln -sf .pnpm/express-rate-limit@7.5.1_express@4.18.2/node_modules/express-rate-limit node_modules/express-rate-limit

ENV NODE_ENV=production PORT=3001 HOST=0.0.0.0
EXPOSE 3001
HEALTHCHECK CMD wget -q --spider http://localhost:3001/health || exit 1

# Start the application directly
CMD ["node", "dist/index.js"]
