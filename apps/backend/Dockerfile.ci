### --- builder -----------------------------------------------------------
FROM node:18-alpine AS builder
WORKDIR /app

# Install build dependencies for native modules
RUN apk add --no-cache python3 py3-setuptools make g++

# copy lock-files and install EVERYTHING (no prune yet, we need dev deps to build)
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/backend/package.json ./apps/backend/
COPY apps/frontend/package.json ./apps/frontend/
RUN npm install -g pnpm@8.6.12
RUN pnpm install --frozen-lockfile

# build the backend + generate Prisma client
COPY apps/backend ./apps/backend
RUN pnpm --filter backend exec prisma generate \
 && pnpm --filter backend run build

### --- runner (prod) -----------------------------------------------------
FROM node:18-alpine
WORKDIR /app

# Install dependencies for health checks and networking
RUN apk add --no-cache openssl ca-certificates libstdc++ netcat-openbsd wget

# copy only production deps & compiled files
COPY --from=builder /app/apps/backend/dist ./dist
COPY --from=builder /app/apps/backend/prisma ./prisma
COPY --from=builder /app/apps/backend/package.json ./package.json
RUN npm install --production

ENV NODE_ENV=production PORT=3001 HOST=0.0.0.0
EXPOSE 3001
HEALTHCHECK CMD wget -q --spider http://localhost:3001/health || exit 1

# Start the application directly
CMD ["node", "dist/index.js"]
