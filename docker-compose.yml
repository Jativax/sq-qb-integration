services:
  db:
    image: postgres:15
    container_name: sq-qb-postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    container_name: sq-qb-pgbouncer
    depends_on:
      - db
    environment:
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '6432:6432'
    volumes:
      - ./config/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./config/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-h',
          'localhost',
          '-p',
          '6432',
          '-U',
          '${POSTGRES_USER}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: sq-qb-redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local

networks:
  default:
    name: sq-qb-network
