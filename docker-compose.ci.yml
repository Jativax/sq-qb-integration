# CI-specific overrides for testing
# This file extends docker-compose.yml with CI-specific configurations
services:
  pgbouncer:
    ports:
      - '6432:6432' # Expose PgBouncer port to host for CI testing
    environment:
      PGBOUNCER_LISTEN_ADDR: '0.0.0.0' # For bitnami-style images
      LISTEN_ADDR: '0.0.0.0' # For edoburu-style images (current)
    healthcheck:
      test: ['CMD-SHELL', 'nc -z 127.0.0.1 6432 || exit 1']
      interval: 3s
      timeout: 2s
      retries: 40

  # Disable backend_service_runner in CI (we use backend-ci instead)
  backend_service_runner:
    profiles: ['disabled']
    # Remove the bind-mount that shadows the built application
    volumes: []
    working_dir: /app # Set working directory to deployed app root
    # Override environment for CI (if this service were ever used)
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://${POSTGRES_USER:-testuser}:${POSTGRES_PASSWORD:-testpass}@db:5432/${POSTGRES_DB:-testdb}?schema=public

  # CI-specific service without bind-mount for testing
  backend-ci:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: sq-qb-backend-ci
    command: sleep infinity
    # No volumes - uses the built image content
    working_dir: /app
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://${POSTGRES_USER:-testuser}:${POSTGRES_PASSWORD:-testpass}@db:5432/${POSTGRES_DB:-testdb}?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpass}
      POSTGRES_DB: ${POSTGRES_DB:-testdb}
      SQUARE_ENVIRONMENT: ${SQUARE_ENVIRONMENT:-sandbox}
      SQUARE_WEBHOOK_SIGNATURE_KEY: ${SQUARE_WEBHOOK_SIGNATURE_KEY:-test_signature_key_for_ci_testing_only}
      PASSWORD_PEPPER: ${PASSWORD_PEPPER:-test_pepper_at_least_16_chars_for_ci}
      SQUARE_ACCESS_TOKEN: ${SQUARE_ACCESS_TOKEN:-EAAAl7HumdOaagaeAAAGmxaOChiHBLSQ8kkAiGEA1VSQ96Af6rUdRQBW8WnrtBUK}
      SQUARE_APPLICATION_ID: ${SQUARE_APPLICATION_ID:-sq0idp-wGVaSbeqoMUBGNicN3mbOw}
      QB_ACCESS_TOKEN: ${QB_ACCESS_TOKEN:-test_qb_token_for_ci}
      QB_REALM_ID: ${QB_REALM_ID:-test_realm_for_ci}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost:3001/health']
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 40s
    networks:
      - sq-qb-network

  # Override backend service for E2E testing without PgBouncer
  backend:
    environment:
      NODE_ENV: test
      HOST: 0.0.0.0
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-testuser}:${POSTGRES_PASSWORD:-testpass}@db:5432/${POSTGRES_DB:-testdb}?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpass}
      POSTGRES_DB: ${POSTGRES_DB:-testdb}
      SQUARE_ENVIRONMENT: ${SQUARE_ENVIRONMENT:-sandbox}
      SQUARE_WEBHOOK_SIGNATURE_KEY: ${SQUARE_WEBHOOK_SIGNATURE_KEY:-test_signature_key_for_ci_testing_only}
      PASSWORD_PEPPER: ${PASSWORD_PEPPER:-test_pepper_at_least_16_chars_for_ci}
      SQUARE_ACCESS_TOKEN: ${SQUARE_ACCESS_TOKEN:-EAAAl7HumdOaagaeAAAGmxaOChiHBLSQ8kkAiGEA1VSQ96Af6rUdRQBW8WnrtBUK}
      SQUARE_APPLICATION_ID: ${SQUARE_APPLICATION_ID:-sq0idp-wGVaSbeqoMUBGNicN3mbOw}
      QB_ACCESS_TOKEN: ${QB_ACCESS_TOKEN:-test_qb_token_for_ci}
      QB_REALM_ID: ${QB_REALM_ID:-test_realm_for_ci}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      # Remove pgbouncer dependency
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost:3001/health']
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 40s
    networks:
      - sq-qb-network

  # Add frontend healthcheck for CI
  frontend:
    environment:
      VITE_API_BASE_URL: http://localhost:3001
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost/']
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 40s
    networks:
      - sq-qb-network
